// src/pages/Home.jsx (Basic UI)
import React, { useState } from "react";
import { motion } from "framer-motion";
import { Box, Paper, Typography, Container } from "@mui/material";
import ChatInput from "../components/ChatInput";
import ChatBubble from "../components/ChatBubble";
import TaskList from "../components/TaskList";
import { generatePlan } from "../api/taskApi";Â 
import toast from "react-hot-toast";

export default function Home() {
Â  const [loading, setLoading] = useState(false);
Â  const [chat, setChat] = useState([]);

Â  const handleGenerate = async (goal) => { /* ... existing logic ... */ };

Â  return (
Â  Â  <Container maxWidth="md" sx={{ py: 4 }}>
Â  Â  Â  <Paper
Â  Â  Â  Â  elevation={6}
Â  Â  Â  Â  sx={{
Â  Â  Â  Â  Â  borderRadius: 4,
Â  Â  Â  Â  Â  overflow: "hidden",
Â  Â  Â  Â  Â  position: 'relative', 
Â  Â  Â  Â  Â  border: 1,
Â  Â  Â  Â  Â  borderColor: "grey.400",Â 
Â  Â  Â  Â  Â  display: "flex",
Â  Â  Â  Â  Â  flexDirection: "column",
Â  Â  Â  Â  Â  maxHeight: 'calc(100vh - 120px)',
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  // Using default paper color for the outer frame
Â  Â  Â  Â  Â  bgcolor: 'background.paper', 
Â  Â  Â  Â  Â  color: 'text.primary',Â 
Â  Â  Â  Â  }}
Â  Â  Â  >
Â  Â  Â  Â  <Box
Â  Â  Â  Â  Â  sx={{
Â  Â  Â  Â  Â  Â  p: 3,
Â  Â  Â  Â  Â  Â  flexGrow: 1,
Â  Â  Â  Â  Â  Â  overflowY: "auto",
Â  Â  Â  Â  Â  Â  height: '100%',
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  // Using a light color for the chat history area
Â  Â  Â  Â  Â  Â  bgcolor: 'grey.50', 
Â  Â  Â  Â  Â  Â  paddingBottom: 3, 
Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {chat.length === 0 && (
Â  Â  Â  Â  Â  Â  <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
Â  Â  Â  Â  Â  Â  Â  <Paper
Â  Â  Â  Â  Â  Â  Â  Â  elevation={4}
Â  Â  Â  Â  Â  Â  Â  Â  sx={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  p: 2,
Â  Â  Â  Â  Â  Â  Â  Â  Â  borderRadius: 3,
Â  Â  Â  Â  Â  Â  Â  Â  Â  maxWidth: "70%",
Â  Â  Â  Â  Â  Â  Â  Â  Â  mx: 'auto', 
Â  Â  Â  Â  Â  Â  Â  Â  Â  bgcolor: 'white', 
Â  Â  Â  Â  Â  Â  Â  Â  Â  border: 1,
Â  Â  Â  Â  Â  Â  Â  Â  Â  borderColor: 'grey.300'
Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <TypographyÂ 
Â  Â  Â  Â  Â  Â  Â  Â  Â  color="text.primary"Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  textAlign="center"Â 
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  ðŸ‘‹ Hi there! Describe your goal to get an AI-generated task plan.
Â  Â  Â  Â  Â  Â  Â  Â  </Typography>
Â  Â  Â  Â  Â  Â  Â  </Paper>
Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  {chat.map((msg, i) => (
Â  Â  Â  Â  Â  Â  <Box key={i}>
Â  Â  Â  Â  Â  Â  Â  <ChatBubbleÂ 
Â  Â  Â  Â  Â  Â  Â  Â  Â  sender={msg.sender}Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  text={msg.text}
Â  Â  Â  Â  Â  Â  Â  Â  Â  tasks={msg.tasks}
Â  Â  Â  Â  Â  Â  Â  Â  Â  goal={msg.goal}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  {msg.tasks && <TaskList tasks={msg.tasks} />}
Â  Â  Â  Â  Â  Â  Â  </ChatBubble>
Â  Â  Â  Â  Â  Â  </Box>
Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  </Box>

Â  Â  Â  Â  {/* Input bar wrapper area uses default white/light grey */}
Â  Â  Â  Â  <Box sx={{ p: 2, bgcolor: 'background.paper', borderTop: 1, borderColor: 'grey.300' }}>
Â  Â  Â  Â  Â  <ChatInput onGenerate={handleGenerate} loading={loading} />
Â  Â  Â  Â  </Box>
Â  Â  Â  </Paper>
Â  Â  </Container>
Â  );
}
