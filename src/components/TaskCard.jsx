// src/components/TaskCard.jsx (Final Styling with Data Fixes)
import React from 'react';
import { Paper, Box, Typography } from '@mui/material';
import AccessTimeIcon from '@mui/icons-material/AccessTime';
import LinkIcon from '@mui/icons-material/Link';

export default function TaskCard({ task, index }) {
Â  // ðŸ›‘ CRITICAL FIX: Robust data mapping for the task title and dependencies
Â  // Checks for 'title' (if API changed) or falls back to your old key 'task'
Â  const taskTitle = task.title || task.task; 
Â  // Checks for 'dependsOn' (if API changed) or falls back to your old key 'depends_on'
Â  const taskDependencies = task.dependsOn || task.depends_on; 

Â  const accentColor = 'primary.light';Â // Subtle gold accent

Â  return (
Â  Â  <Paper // Switched back to Paper for the desired white/bordered look
Â  Â  Â  elevation={2}
Â  Â  Â  sx={{
Â  Â  Â  Â  p: 2,
Â  Â  Â  Â  borderRadius: 2,
Â  Â  Â  Â  // Card background is Clean White
Â  Â  Â  Â  bgcolor: '#FFFFFF',Â 
Â  Â  Â  Â  border: 1,Â 
Â  Â  Â  Â  borderColor: accentColor, // Subtle gold border
Â  Â  Â  Â  mb: 2,Â 
Â  Â  Â  Â  width: '100%',Â 
Â  Â  Â  Â  boxShadow: `0px 2px 5px 0px rgba(184, 134, 11, 0.1)`,Â 
Â  Â  Â  }}
Â  Â  >
Â  Â  Â  <Typography variant="subtitle1" fontWeight="bold" sx={{ color: 'text.primary', mb: 1 }}>
Â  Â  Â  Â  {index + 1}. {**taskTitle**} // Uses the robust variable to show full title
Â  Â  Â  </Typography>

Â  Â  Â  {task.deadline && (
Â  Â  Â  Â  <Box display="flex" alignItems="center" sx={{ color: 'grey.600', fontSize: '0.85rem', mb: 0.5 }}>
Â  Â  Â  Â  Â  <AccessTimeIcon sx={{ fontSize: '1rem', mr: 0.5, color: 'text.secondary' }} />
Â  Â  Â  Â  Â  Deadline: {task.deadline}
Â  Â  Â  Â  </Box>
Â  Â  Â  )}

Â  Â  Â  {taskDependencies && taskDependencies.length > 0 && (
Â  Â  Â  Â  <Box sx={{ mt: 1 }}>
Â  Â  Â  Â  Â  <Typography variant="caption" display="block" sx={{ color: 'text.secondary', mb: 0.5 }}>
Â  Â  Â  Â  Â  Â  <LinkIcon sx={{ fontSize: '0.85rem', mr: 0.5 }} />
Â  Â  Â  Â  Â  Â  Depends on:
Â  Â  Â  Â  Â  </Typography>
Â  Â  Â  Â  Â  <Box display="flex" flexWrap="wrap" gap={0.5}>
Â  Â  Â  Â  Â  Â  {taskDependencies.map((dep, depIndex) => (
Â  Â  Â  Â  Â  Â  Â  <Box
Â  Â  Â  Â  Â  Â  Â  Â  key={depIndex}
Â  Â  Â  Â  Â  Â  Â  Â  sx={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  bgcolor: 'lightsalmon',Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  color: 'white',Â 
Â  Â  Â  Â  Â  Â  Â  Â  Â  borderRadius: 1,
Â  Â  Â  Â  Â  Â  Â  Â  Â  px: 1,
Â  Â  Â  Â  Â  Â  Â  Â  Â  py: 0.25,
Â  Â  Â  Â  Â  Â  Â  Â  Â  fontSize: '0.75rem',
Â  Â  Â  Â  Â  Â  Â  Â  Â  fontWeight: 'medium',
Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  {dep}
Â  Â  Â  Â  Â  Â  Â  </Box>
Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  </Box>
Â  Â  Â  Â  </Box>
Â  Â  Â  )}
Â  Â  </Paper>
Â  );
}
